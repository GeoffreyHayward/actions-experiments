name: Hippo CI/CD

 on: push

 jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Display settings.xml 
        run: |
            cp .m2/settings.xml /home/runner/.m2/settings.xml
            cat /home/runner/.m2/settings.xml
      - name: Run tests with Maven
        run: mvn -B test --file pom.xml
        


#         settings-path: .m2/settings.xml # location for the settings.xml file
#      - name: Display settings.xml
#        env:
#          HIPPO_MAVEN_USERNAME: ${{ secrets.HIPPO_MAVEN_USERNAME }}
#          HIPPO_MAVEN_PASSWORD: ${{ secrets.HIPPO_MAVEN_PASSWORD }}
#      - name: Display settings.xml 
#        run: |
#           cp .m2/settings.xml /home/runner/.m2/settings.xml
#           cat /home/runner/.m2/settings.xml
           
#      - name: Maven Package
#        run: mvn -B clean package -DskipTests
#      - name: Maven Verify
#        run: mvn -B clean verify -DskipTests        
#      - name: Maven Build
#        run: mvn -B package --file pom.xml

          
#     env:
#         HIPPO_MAVEN_USERNAME: ${{ secrets.HIPPO_MAVEN_USERNAME }}
#         HIPPO_MAVEN_PASSWORD: ${{ secrets.HIPPO_MAVEN_PASSWORD }}

#      - name: Build with Gradle
#        run: gradle build

#      - name: Publish to GitHub Packages
#        run: gradle publish
#        env:
#           USERNAME: ${{ github.actor }}
#           PASSWORD: ${{ secrets.GITHUB_TOKEN }}        
         
           
  # sonar:
  #   name: Test - SonarCloud Scan
  #   runs-on: ubuntu-latest

  #   steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up JDK 1.8
  #      uses: actions/setup-java@v1
  #      with:
  #       java-version: 1.8
  #    - name: SonarCloud Scan
  #      run: mvn -B clean verify -DskipTests -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # artifact:
  #   name: Publish - GitHub Packages
  #   runs-on: ubuntu-18.04
  #   needs: [test, sonar]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 1.8
  #       uses: actions/setup-java@v1
  #       with:
  #        java-version: 1.8
  #     - name: Publish artifact on GitHub Packages
  #       run: mvn -B -e -X clean deploy -DskipTests
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          

 #      - name: Maven Package
 #        run: mvn -B clean package
     
 #    - name: Maven Verify
 #      run: mvn -B clean verify
        
 #    - name: Build project with Maven
 #      run: mvn -B package --file pom.xml

 #    - name: Publish to GitHub Packages Apache Maven
 #      run: mvn deploy
      
        # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        # settings-path: .m2/settings.xml # location for the settings.xml file      
# name: Maven CI/CD

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:

#  test:
#    name: Test - Units & Integrations
#    runs-on: ubuntu-latest

#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#         java-version: 1.8 
#      - name: Maven Package
#        run: mvn -B clean package -DskipTests
#      - name: Maven Verify
#        run: mvn -B clean verify -DskipTests

#  sonar:
#    name: Test - SonarCloud Scan
#    runs-on: ubuntu-latest

#    steps:
#       - uses: actions/checkout@v2
#       - name: Set up JDK 1.8
#         uses: actions/setup-java@v1
#         with:
#          java-version: 1.8
#       - name: SonarCloud Scan
#         run: mvn -B clean verify -DskipTests -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#         env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  artifact:
#    name: Publish - GitHub Packages
#    runs-on: ubuntu-18.04
#    needs: [test, sonar]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#         java-version: 1.8
#      - name: Publish artifact on GitHub Packages
#        run: mvn -B -e -X clean deploy -DskipTests
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# build_and_test:
#     runs-on: ubuntu-latest
     
#     steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8 
#        env:
#         HIPPO_MAVEN_USERNAME: ${{ secrets.HIPPO_MAVEN_USERNAME }}
#         HIPPO_MAVEN_PASSWORD: ${{ secrets.HIPPO_MAVEN_PASSWORD }}  
